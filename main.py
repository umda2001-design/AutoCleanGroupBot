import asyncio
import os
import json
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env –∏–ª–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
load_dotenv()
TOKEN = os.getenv("TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher()

DATA_FILE = "data.json"


# === –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–æ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ===
def load_data():
    try:
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return {"admin_id": None, "invites": {}}


def save_data(data):
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4, ensure_ascii=False)


data = load_data()


# === –ö–æ–º–∞–Ω–¥–∞ /start ===
@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    await message.reply(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø—É.\n\n"  
        "üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ–±—è –∫–æ–º–∞–Ω–¥–æ–π /setadmin.\n"
        "üìä –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –±–æ—Ç –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å, –∫—Ç–æ —Å–∫–æ–ª—å–∫–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–∏–≥–ª–∞—Å–∏–ª."
    )


# === –ö–æ–º–∞–Ω–¥–∞ /setadmin ===
@dp.message(Command("setadmin"))
async def set_admin(message: types.Message):
    if message.from_user:
        data["admin_id"] = message.from_user.id
        save_data(data)
        await message.reply("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!")


# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
async def main():
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
