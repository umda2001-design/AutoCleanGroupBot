import asyncio
import os
import json
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import ChatMemberUpdated
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv("TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher()

DATA_FILE = "data.json"


# --- Ma'lumotni faylda saqlash ---
def load_data():
    try:
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return {"admin_id": None, "invites": {}}


def save_data(data):
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4, ensure_ascii=False)


data = load_data()


# === START komandasi ===
@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    await message.reply(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø—É.\n\n"
        "–ß—Ç–æ–±—ã –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setadmin.\n"
        "–Ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –∏ —Å—á–∏—Ç–∞—é, –∫—Ç–æ —Å–∫–æ–ª—å–∫–æ –ª—é–¥–µ–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª."
    )


# === Adminni o‚Äòrnatish ===
@dp.message(Command("setadmin"))
async def set_admin(message: types.Message):
    data["admin_id"] = message.from_user.id
    save_data(data)
    await message.reply("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!")


# === Foydalanuvchilarni kuzatish ===
@dp.chat_member(ChatMemberUpdated)
async def on_user_join(event: ChatMemberUpdated):
    # yangi foydalanuvchi qo‚Äòshilganini aniqlash
    if event.new_chat_member.status == "member":
        inviter = event.from_user
        new_user = event.new_chat_member.user

        # xabarni o‚Äòchirib tashlaymiz (joined)
        try:
            await bot.delete_message(event.chat.id, event.chat.id)
        except:
            pass

        if inviter and not inviter.is_bot:
            inviter_id = str(inviter.id)
            if inviter_id not in data["invites"]:
                data["invites"][inviter_id] = {"name": inviter.full_name, "count": 0}

            data["invites"][inviter_id]["count"] += 1
            save_data(data)


# === Statistika faqat admin uchun ===
@dp.message(Command("stat"))
async def show_stats(message: types.Message):
    if not data["admin_id"]:
        await message.reply("‚ö†Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –µ—â—ë –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω.")
        return

    if message.from_user.id != data["admin_id"]:
        await message.reply("üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ.")
        return

    if not data["invites"]:
        await message.reply("üìä –ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª.")
        return

    text = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:\n\n"
    for user_id, info in data["invites"].items():
        text += f"üë§ {info['name']} ‚Äî {info['count']} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"

    await message.reply(text)


# === Botni ishga tushirish ===
async def main():
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
